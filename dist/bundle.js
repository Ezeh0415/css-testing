/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/TaskList.js":
/*!*************************!*\
  !*** ./src/TaskList.js ***!
  \*************************/
/***/ (() => {

eval("const btn =  document.querySelector(\"#btn\");\r\nconst div = document.querySelector(\".outPut-section div\");\r\nconst popUp = document.querySelector(\".popUp-text\");\r\nconst editModal = document.querySelector(\".modal\");\r\nconst editBtn = document.querySelector(\".editBtn\");\r\nconst cancleBtn = document.querySelector(\".cancleBtn\");\r\nlet arrayTask = [];\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst TaskList = () => {\r\n    let title = document.getElementById(\"title\");\r\n    let task = document.getElementById(\"task\");\r\n    let titles = title.value.trim()\r\n    let tasks = task.value.trim()\r\n    let date = Date.now();\r\n\r\n\r\n    if (titles === \"\" || tasks === \"\") {\r\n        popUp.textContent = \"input feild empty!!\";\r\n        popUp.style.color = \"red\";\r\n        popUp.style.backgroundColor = \"#fe8b8b\"\r\n        popUp.style.marginLeft = \"0%\"\r\n        setTimeout(() => {\r\n            popUp.style.marginLeft = \"100%\"\r\n        }, 1500);\r\n       \r\n    } else {\r\n            \r\n            // const arrayTask = [];\r\n            const taskObj = Object.create({});\r\n            taskObj.id = date;\r\n            taskObj.taskTitle = titles;\r\n            taskObj.taskTask = tasks;\r\n\r\n             arrayTask.push(taskObj)\r\n\r\n        // tag creation\r\n    //                 const article = document.createElement(\"article\");\r\n    //                 const h2 = document.createElement(\"h2\"); \r\n    //                 const blockquote = document.createElement(\"blockquote\");\r\n    //                 const span = document.createElement(\"span\");\r\n    //                 const p = document.createElement(\"p\");\r\n    //                 const iFirst = document.createElement(\"i\");\r\n    //                 const iSecond = document.createElement(\"i\");\r\n    //                 const iThird = document.createElement(\"i\");\r\n    //         // adding classs names\r\n    //             iFirst.className = \"fas fa-check-double\";\r\n    //             iSecond.className = \"fas fa-edit\";\r\n    //             iThird.className = \"fas fa-trash-alt\";\r\n    //             span.className = \"task-header\";\r\n    //             p.className = \"icon\";\r\n\r\n\r\n    //     const newTask = Object.create({});\r\n    //     newTask.id = date;\r\n    //     newTask.newTitle = titles;\r\n    //     newTask.newTasks = tasks\r\n\r\n    //    arrayTask.push(newTask);\r\n\r\n    //    popUp.textContent = \"task added successfully\";\r\n    //        popUp.style.color = \"green\";\r\n    //        popUp.style.backgroundColor = \"#8bfecc\"\r\n    //        popUp.style.marginLeft = \"0%\"\r\n    //        setTimeout(() => {\r\n    //            popUp.style.marginLeft = \"100%\"\r\n    //        }, 1500);\r\n\r\n    //     localStorage.setItem(\"myLocalStore\",JSON.stringify(arrayTask));\r\n    //     const mylocalData = JSON.parse(localStorage.getItem(\"myLocalStore\"));\r\n    //        console.log(mylocalData);\r\n    //     mylocalData.forEach(eachTask => {\r\n    //         const {id,newTitle,newTask} = eachTask;\r\n\r\n    //         // added the textContext\r\n    //             h2.textContent = `${newTitle}`; \r\n    //             blockquote.textContent = `${newTask}`;\r\n                \r\n    //             const taskComplete = () => {\r\n    //                     const taskId = mylocalData.find( (eachTasks) => eachTasks.id === eachTasks.id)\r\n    //                      console.log(taskId)\r\n\r\n    //                     // article.style.backgroundColor = \"green\";\r\n    //                     // setTimeout(() => {\r\n    //                     //     article.style.backgroundColor = \"#fff\";\r\n    //                     //     iFirst.style.color = \"green\"\r\n    //                     // }, 1500);\r\n    //                     // popUp.textContent = \"task completed successfully\";\r\n    //                     // popUp.style.color = \"green\";\r\n    //                     // popUp.style.backgroundColor = \"#8bfecc\"\r\n    //                     // popUp.style.marginLeft = \"0%\"\r\n    //                     // setTimeout(() => {\r\n    //                     //     popUp.style.marginLeft = \"100%\"\r\n    //                     // }, 1500);\r\n    //             };\r\n    //             iFirst.addEventListener(\"click\",taskComplete);\r\n    //     });\r\n\r\n    //     // mylocalData.map((eachTask) => {\r\n\r\n    //     //           // added the textContext\r\n    //     //             h2.textContent = `${eachTask.newTitle}`; \r\n    //     //             blockquote.textContent = `${eachTask.newTask}`;\r\n    //     //             const taskComplete = () => {\r\n    //     //                 const taskId = mylocalData.find( (eachTasks) => eachTasks.id === eachTasks.id)\r\n    //     //                  console.log(taskId)\r\n            \r\n    //     //                      // article.style.backgroundColor = \"green\";\r\n    //     //                      // setTimeout(() => {\r\n    //     //                      //     article.style.backgroundColor = \"#fff\";\r\n    //     //                      //     iFirst.style.color = \"green\"\r\n    //     //                      // }, 1500);\r\n    //     //                      // popUp.textContent = \"task completed successfully\";\r\n    //     //                      // popUp.style.color = \"green\";\r\n    //     //                      // popUp.style.backgroundColor = \"#8bfecc\"\r\n    //     //                      // popUp.style.marginLeft = \"0%\"\r\n    //     //                      // setTimeout(() => {\r\n    //     //                      //     popUp.style.marginLeft = \"100%\"\r\n    //     //                      // }, 1500);\r\n    //     //              };\r\n    //     //              iFirst.addEventListener(\"click\",taskComplete);\r\n    //     // })\r\n    //        // appended the tag to the html tag\r\n    //             p.appendChild(iFirst);\r\n    //             p.appendChild(iSecond);\r\n    //             p.appendChild(iThird);\r\n\r\n    //             span.appendChild(h2);\r\n    //             span.appendChild(p);\r\n                \r\n    //             article.appendChild(span);\r\n    //             article.appendChild(blockquote);\r\n    //             div.appendChild(article);\r\n\r\n    //     title.value = \"\"\r\n    //     task.value = \"\"\r\n\r\n    //      // icon functions\r\n    //     //  const taskComplete = () => {\r\n    //     //     // const taskId = mylocalData.find( (eachTasks) => eachTasks.id === id)\r\n    //     //     //  console.log(taskId)\r\n\r\n    //     //          // article.style.backgroundColor = \"green\";\r\n    //     //          // setTimeout(() => {\r\n    //     //          //     article.style.backgroundColor = \"#fff\";\r\n    //     //          //     iFirst.style.color = \"green\"\r\n    //     //          // }, 1500);\r\n    //     //          // popUp.textContent = \"task completed successfully\";\r\n    //     //          // popUp.style.color = \"green\";\r\n    //     //          // popUp.style.backgroundColor = \"#8bfecc\"\r\n    //     //          // popUp.style.marginLeft = \"0%\"\r\n    //     //          // setTimeout(() => {\r\n    //     //          //     popUp.style.marginLeft = \"100%\"\r\n    //     //          // }, 1500);\r\n    //     //  };\r\n    //     //  iFirst.addEventListener(\"click\",taskComplete);\r\n     \r\n\r\n            \r\n\r\n        // normal task function\r\n        // // tag creation\r\n        const article = document.createElement(\"article\");\r\n        const h2 = document.createElement(\"h2\"); \r\n        const blockquote = document.createElement(\"blockquote\");\r\n        const span = document.createElement(\"span\");\r\n        const p = document.createElement(\"p\");\r\n        const iFirst = document.createElement(\"i\");\r\n        const iSecond = document.createElement(\"i\");\r\n        const iThird = document.createElement(\"i\");\r\n        // adding classs names\r\n        iFirst.className = \"fas fa-check-double\";\r\n        iSecond.className = \"fas fa-edit\";\r\n        iThird.className = \"fas fa-trash-alt\";\r\n        span.className = \"task-header\";\r\n        p.className = \"icon\";\r\n\r\n      \r\n\r\n    arrayTask.forEach((singleTask) => {\r\n        // added the textContext;\r\n          article.key = `${singleTask.id}`\r\n          h2.textContent = `${singleTask.taskTitle}`; \r\n          blockquote.textContent = `${singleTask.taskTask}`;\r\n           // pop up \r\n            popUp.textContent = \"task added successfully\";\r\n            popUp.style.color = \"green\";\r\n            popUp.style.backgroundColor = \"#8bfecc\"\r\n            popUp.style.marginLeft = \"0%\"\r\n            setTimeout(() => {\r\n                popUp.style.marginLeft = \"100%\"\r\n            }, 1500);\r\n            // appended the tag to the html tag\r\n            p.appendChild(iFirst);\r\n            p.appendChild(iSecond);\r\n            p.appendChild(iThird);\r\n\r\n            span.appendChild(h2);\r\n            span.appendChild(p);\r\n            \r\n            article.appendChild(span);\r\n            article.appendChild(blockquote);\r\n            div.appendChild(article);\r\n\r\n            // clearing the input\r\n            title.value = \"\";\r\n            task.value = \"\";\r\n                   \r\n    })\r\n\r\n  \r\n\r\n    const taskComplete = () => {\r\n\r\n        // const completed = arrayTask.find(tasks => \"id\" in tasks)\r\n        // console.log(completed.taskTitle);\r\n        \r\n           article.style.backgroundColor = \"green\";\r\n           setTimeout(() => {\r\n               article.style.backgroundColor = \"#fff\";\r\n               iFirst.style.color = \"green\"\r\n           }, 1500);\r\n           popUp.textContent = \"task completed successfully\";\r\n           popUp.style.color = \"green\";\r\n           popUp.style.backgroundColor = \"#8bfecc\"\r\n           popUp.style.marginLeft = \"0%\"\r\n           setTimeout(() => {\r\n               popUp.style.marginLeft = \"100%\"\r\n           }, 1500);\r\n      };\r\n\r\n    // localStorage.setItem(\"myLocalStore\",JSON.stringify(arrayTask));\r\n    // const mylocalData = JSON.parse(localStorage.getItem(\"myLocalStore\"));\r\n    // console.log(mylocalData);\r\n\r\n\r\n       const taskEdit = () => {\r\n         title.value = titles;\r\n         task.value = tasks;\r\n\r\n         btn.style.display = \"none\";\r\n         editBtn.style.display = \"block\";\r\n       }\r\n\r\n       \r\n       const editTask = () => {\r\n        if (titles !== null || tasks !== null) {\r\n            let  newTitles = title.value.trim()\r\n            let  newTasks = task.value.trim()\r\n           \r\n            h2.innerHTML = `${newTitles}`; \r\n            blockquote.innerHTML = `${newTasks}`;\r\n\r\n            title.value = \"\"\r\n            task.value = \"\"\r\n\r\n             btn.style.display = \"block\";\r\n             editBtn.style.display = \"none\";\r\n        }\r\n    }\r\n\r\n\r\n\r\n       const taskDelete = () => {\r\n            article.remove()\r\n            popUp.textContent = \"task delete a is success\";\r\n            popUp.style.color = \"red\";\r\n            popUp.style.backgroundColor = \"#fe8b8b\"\r\n            popUp.style.marginLeft = \"0%\"\r\n            setTimeout(() => {\r\n                popUp.style.marginLeft = \"100%\"\r\n            }, 1500);\r\n       };\r\n      // addind eventlistener to icons\r\n      iFirst.addEventListener(\"click\",taskComplete);\r\n      iSecond.addEventListener(\"click\",taskEdit);\r\n      iThird.addEventListener(\"click\",taskDelete);\r\n      editBtn.addEventListener(\"click\",editTask);\r\n      \r\n    }\r\n}\r\n\r\nbtn.addEventListener(\"click\",TaskList)\n\n//# sourceURL=webpack://test-for-js/./src/TaskList.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/TaskList.js"]();
/******/ 	
/******/ })()
;